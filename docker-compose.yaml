version: "3"

services:
  traefik:
    image: "traefik:v2.5"
    container_name: "traefik"
    restart: 'always'
    security_opt:
      - no-new-privileges:true
    env_file:
      - "./services/traefik/traefik.env"
    command:
      - '--log.level=INFO'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--providers.docker'
      - '--api'
      - '--certificatesresolvers.digitalocean.acme.email=philipp.stuerner@web.de'
      - '--certificatesresolvers.digitalcoean.acme.dnschallenge=true'
      - '--certificatesresolvers.digitalocean.acme.dnschallenge.provider=digitalocean'
      - '--certificatesresolvers.digitalocean.acme.storage=/letsencrypt/acme.json'
      # - '--certificatesResolvers.cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53'
      - '--certificatesresolvers.cloudflare.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory'
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro" 
    labels:
      # global redirect to https
      - 'traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)'
      - 'traefik.http.routers.http-catchall.entrypoints=web'
      - 'traefik.http.routers.http-catchall.middlewares=redirect-to-https'
      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https'

      # global wildcard certificates
      - 'traefik.http.routers.wildcard-certs.tls.certresolver=digitalocean'
      - 'traefik.http.routers.wildcard-certs.tls.domains[0].main=philippstuerner.com'
      - 'traefik.http.routers.wildcard-certs.tls.domains[0].sans=*.philippstuerner.com'

      # dashboard
      - 'traefik.http.routers.traefik.rule=Host(`traefik.philippstuerner.com`)'
      - 'traefik.http.routers.traefik.tls=true'
      - 'traefik.http.routers.traefik.entrypoints=websecure'
      - 'traefik.http.routers.traefik.service=api@internal'
      - 'traefik.http.routers.traefik.middlewares=authtraefik'
      - 'traefik.http.middlewares.authtraefik.basicauth.users=admin:removed'

  frontend:
    build: ./services/frontend/
    container_name: "frontend"
    restart: always
    security_opt:
      - no-new-privileges:true
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    labels:
      - 'traefik.http.routers.frontend.rule=Host(`philippstuerner.com`) || Host(`www.philippstuerner.com`)'
      - 'traefik.http.routers.frontend.tls=true'
      - 'traefik.http.routers.frontend.entrypoints=websecure'
      
  api:
    build: ./services/api/
    container_name: "api"
    restart: always
    security_opt:
      - no-new-privileges:true
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    labels:
      - 'traefik.http.routers.api.rule=Host(`api.philippstuerner.com`)'
      - 'traefik.http.routers.api.tls=true'
      - 'traefik.http.routers.api.entrypoints=websecure'
  
  mongojs:
    build: ./services/mongojs
    container_name: "mongojs"
    restart: always
    security_opt:
      - no-new-privileges:true
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    labels:
      - 'traefik.http.routers.mongojs.rule=Host(`mongodb.philippstuerner.com`)'
      - 'traefik.http.routers.mongojs.tls=true'
      - 'traefik.http.routers.mongojs.entrypoints=websecure'
    env_file:
      - "./services/mongojs/mongojs.env"

volumes:
  traefik-public-certificates:

secrets:
  DO_AUTH_TOKEN:
    file: ./DO_AUTH_TOKEN


